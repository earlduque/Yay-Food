<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $uibModal) {
	/* widget controller */
	var c = this;
	c.edit = false;

	$scope.create_restauarnt = function(restaurantName){
		if (restaurantName == null || restaurantName == '') {alert('Please enter a name.');return;}
		c.data.restaurant_name = restaurantName;
		c.server.update();
	}

	c.openModal = function(name, sys_id) {
		c.data.modal_restaurant_name = name;
		c.data.restaurant_sys_id = sys_id;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate',
			scope: $scope
		});
	}

	c.openModal2 = function(entree) {
		c.data.modal_entree_name = entree.name;
		c.data.modal_entree_rating = entree.rating;
		c.data.modal_entree_members = entree.members;
		c.data.modal_entree_note = entree.note;
		c.data.modal_entree_sys_id = entree.sys_id;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate2',
			scope: $scope
		});
		c.modalInstance.closed.then(function(){
			c.edit = false;
		})
	}

	c.openModal3 = function(name, sys_id, note){
		c.data.modal_restaurant_name = name;
		c.data.restaurant_sys_id = sys_id;
		c.data.restaurant_note = note;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate3',
			scope: $scope
		});
	}

	c.closeModal = function() {
		c.modalInstance.close();
	}

	c.addEntree = function(sys_id) {
		if (!c.data.entree_name || !c.data.rating){
			alert('Please complete all fields');
			return;
		}
		var valid_rating = /^\-?(?=\d)\d*\.?(?=\d)\d*$/;
		if (valid_rating.test(c.data.rating) == false){
			alert('Invalid rating. Please use a decimal number');
			return;
		}
		c.data.new_entree_restaurant = sys_id;
		c.server.update();
		c.modalInstance.close();
	}

	c.addNote = function(sys_id, note) {
		c.data.add_note_to_restaurant = sys_id;
		c.data.add_note = true;
		c.data.add_note_text = note;
		c.server.update();
		c.modalInstance.close();
	}

	c.deleteEntree = function(sys_id){
		var confirm_delete = confirm('Are you sure you want to delete this entree? The action is irreversible.');
		//alert(confirm_delete);
		if (confirm_delete) {
			c.data.confirmed_delete = true;
			c.server.update();
		}
	}

	c.deleteRestaurant = function(sys_id){
		var confirm_delete = confirm('Are you sure you want to delete this restaurant? The action is irreversible.');
		if (confirm_delete){
			var confirm_delete2 = confirm('WARNING: Deleting this restaurant will also delete all food entries associated with this restaurant. Continue?');
			if (confirm_delete2){
				c.data.confirmed_delete_restaurant = true;
				c.server.update();
			}
		}
	}

	c.addMember = function(){
		c.data.confirmed_add_member = true;
		c.server.update();
		alert('New group member succesfully added');
	}

	c.editMember = function(){
		c.data.confirmed_edit_member = true;
		c.server.update();
		alert('Group member successfully edited');
	}

	c.deleteMember = function(){
		var confirm_delete = confirm('Are you sure you want to delete this group member? They will be removed from the group and all associations to ratings will be removed. This is irreversible.');
		if (confirm_delete){
			c.data.confirmed_delete_member = true;
			c.server.update();
		}
	}

	c.editFood = function(){
		c.edit = true;
	}

	c.saveEdits = function(){
		c.edit = false;
		c.data.confirmed_edits = true;
		c.server.update();
		c.modalInstance.close();
	}
	
	c.newSort = function(selection){
		c.data.confirmed_new_sort = true;
		c.server.update();
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.list-group-item{
  background-color: #F3F3F3;
}

.MobileFriend{
  margin-left: 10px;
  margin-right: 10px;
}

.btn{
  display: inline-block;
  margin-bottom: 0;
  font-weight: normal;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap;
  padding: 6px 9px;
  font-size: 13px;
  line-height: 1.42857;
  border-radius: 3px;
  user-select: none;
}

.btn-destructive{
  color: #fff;
  background-color: #f95050;
  border-color: #f71f1f;
}

.btn-default{
  color: #343d47;
  background-color: rgba(255, 255, 255, 0.45);
  border-color: #bdc0c4;
}

.sorter{
  position: absolute;
  right: 10px;
  top: 7px;
}

.custom-select{
  color: black;
  background-color: white;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>yayfood</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>YayFood</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	data.group_id = $sp.getParameter('group');
	data.no_group = false;
	data.show_debug = false;
	data.debug = false;
	data.checkbox = [];
	data.members_id_array = [];
	data.add_note = false;
	data.access = false;

	//group in parameters?
	if (data.group_id) {
		var group = new GlideRecord('x_snc_yay_food_groups');
		group.get(data.group_id);
		data.group_name = group.name.toString();
		//newSort?
		if (input !=null && input.confirmed_new_sort){
			group.setValue('sort', input.selectedSort);
			group.update();
		}
		data.selectedSort = group.sort.toString();
	}	else {
		data.no_group = true;
	}

	//grant editing access?
	if ($sp.getParameter('pw')){
		var check_access = new GlideRecord('x_snc_yay_food_access');
		check_access.get($sp.getParameter('pw'));
		if (check_access.group == data.group_id){
			data.access = true;
		}
	}

	//Add a new member
	if (input != null && input.confirmed_add_member){
		var addMemberGR = new GlideRecord('x_snc_yay_food_members');
		addMemberGR.initialize();
		addMemberGR.setValue('group', data.group_id);
		addMemberGR.setValue('name', input.add_member_name);
		addMemberGR.insert();
		data.add_member_name = null;
		data.confirmed_add_member = null;
	}

	//edit member name
	if (input !=null && input.confirmed_edit_member) {
		var editMemberGR = new GlideRecord('x_snc_yay_food_members');
		editMemberGR.get(input.member_to_edit);
		editMemberGR.setValue('name', input.new_name);
		editMemberGR.update();
		data.confirmed_edit_member = null;
		data.member_to_edit = null;
		data.new_name = null;
	}

	if (input!=null && input.confirmed_delete_member){
		var deleteMemberGR = new GlideRecord ('x_snc_yay_food_members');
		deleteMemberGR.get(input.member_to_edit);
		deleteMemberGR.deleteRecord();
		data.confirmed_delete_member = null;
		data.member_to_edit = null;
	}

	//who are the members of this group?
	data.members = [];
	var members = new GlideRecord('x_snc_yay_food_members');
	members.addQuery('group', data.group_id);
	members.query();
	while(members.next()){
		var member = {};
		member.name = members.getValue('name').toString();
		member.sys_id = members.getUniqueValue().toString();
		data.members_id_array.push(members.getUniqueValue());
		data.members.push(member);
	}

	//add a new entree to the restaurant
	if (input != null && input.entree_name && input.rating && input.new_entree_restaurant){
		//data.testadd = true;
		var new_entree = new GlideRecord('x_snc_yay_food_food');
		new_entree.initialize();
		new_entree.setValue('food', input.entree_name);
		new_entree.setValue('rating', input.rating);
		if (input.note) new_entree.setValue('note', input.note);
		new_entree.setValue('restaurant', input.new_entree_restaurant);
		var member_array = [];
		for (var i = 0; i < input.checkbox.length; i++){
			if (input.checkbox[i]) member_array.push(data.members_id_array[i]);
		}
		new_entree.setValue('members', member_array.join(','));
		new_entree.insert();
		data.entree_name = '';
		data.rating = '';
		data.new_entree_restaurant = '';
		data.checkbox = [];
		data.note = '';

		//data.array_to_push = member_array.join(',');
	}

	//update the note of this restaurant
	if (input != null && input.add_note == true){
		var update_note = new GlideRecord('x_snc_yay_food_restaurants');
		update_note.get(input.add_note_to_restaurant);
		data.notegr = update_note.getRowCount();
		update_note.setValue('note', input.add_note_text + '');
		update_note.update();
		data.add_note = false;
		data.add_note_to_restaurant = '';
	}

	//delete an entrree
	if (input != null && input.confirmed_delete){
		var foodDeleteGR = new GlideRecord('x_snc_yay_food_food');
		foodDeleteGR.get(input.delete_entree);
		foodDeleteGR.deleteRecord();
		data.confirmed_delete = null;
		data.delete_entree_from_restaurant = null;
		data.delete_entree = null;
	}

	//delete a restaurant and all of its entries
	if (input !=null && input.confirmed_delete_restaurant){
		var restaurantFoodDeleteGR = new GlideRecord('x_snc_yay_food_food');
		restaurantFoodDeleteGR.addQuery('restaurant', input.delete_restaurant);
		restaurantFoodDeleteGR.query();
		restaurantFoodDeleteGR.deleteMultiple();
		var restaurantDeleteGR = new GlideRecord('x_snc_yay_food_restaurants');
		restaurantDeleteGR.get(input.delete_restaurant);
		restaurantDeleteGR.deleteRecord();
		data.confirmed_delete_restaurant = null;
		data.cdelete_restaurant = null;
	}

	//edit an entree
	if (input !=null && input.confirmed_edits){
		var food2editGR = new GlideRecord('x_snc_yay_food_food');
		food2editGR.get(input.modal_entree_sys_id);
		food2editGR.setValue('food',input.modal_entree_name);
		food2editGR.setValue('rating',input.modal_entree_rating);
		food2editGR.setValue('note',input.modal_entree_note);
		food2editGR.update();
		data.confirmed_edits = null;
	}

	//get the restaurants and entrees for this group
	data.restaurants = [];
	var restaurants = new GlideRecord('x_snc_yay_food_restaurants');
	//restaurants.orderBy('name');
	restaurants.addQuery('group', data.group_id);
	restaurants.query();
	while(restaurants.next()){
		var restaurant = {};
		restaurant.name = restaurants.getValue('name').toString();
		restaurant.sys_id = restaurants.getUniqueValue().toString();
		restaurant.note = restaurants.getValue('note');
		restaurant.created = restaurants.getValue('sys_created_on').toString();

		var foodGR = new GlideRecord('x_snc_yay_food_food');
		foodGR.addQuery('restaurant', restaurant.sys_id);
		foodGR.orderByDesc('rating');
		foodGR.query();
		data.test = foodGR.getRowCount();
		var food = [];
		var ratings = 0;
		var total_rates = foodGR.getRowCount();
		var highest_rate = 0;
		while(foodGR.next()){
			var entree = {};
			entree.name = foodGR.getValue('food').toString();
			entree.rating = foodGR.getValue('rating').toString();
			entree.members = foodGR.getDisplayValue('members').toString();
			entree.note = foodGR.getValue('note');
			entree.sys_id = foodGR.getUniqueValue();
			entree.created = foodGR.getValue('sys_created_on').toString();
			ratings += parseFloat(foodGR.getValue('rating'));
			if (foodGR.getValue('rating') == 0) total_rates--;
			if (entree.rating > highest_rate) highest_rate = entree.rating;
			food.push(entree);
		}
		restaurant.avg_rating = (ratings/total_rates).toFixed(2);
		restaurant.highest_rate = highest_rate;
		restaurant.food = food;
		data.restaurants.push(restaurant);
	}
	
	//determine ordering
	switch (data.selectedSort){
		case '1':
			data.sortOrder = '-avg_rating';
			break;
		case '2':
			data.sortOrder = 'avg_rating';
			break;
		case '3':
			data.sortOrder = '-highest_rate';
			break;
		case '4':
			data.sortOrder = 'highest_rate';
			break;
		case '5':
			data.sortOrder = 'name';
			break;
		case '6':
			data.sortOrder = '-name';
			break;
		case '7':
			data.sortOrder = '-created';
			break;
		case '8':
			data.sortOrder = 'created';
			break;
	}

	//add a new restaurant
	if (input != null && input.restaurant_name){
		data.new_name = input.restaurant_name;
		data.restaurant_name_input = '';
		var new_restaurant = new GlideRecord('x_snc_yay_food_restaurants');
		new_restaurant.initialize();
		new_restaurant.setValue('name',data.new_name);
		new_restaurant.setValue('group',data.group_id);
		new_restaurant.insert();
		var newest_restaurant = {};
		newest_restaurant.name = data.new_name;
		newest_restaurant.group = data.group_id;
		newest_restaurant.sys_id = new_restaurant.getUniqueValue().toString();
		data.restaurants.push(newest_restaurant);
		data.restaurant_name = '';
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin-eduque</sys_created_by>
        <sys_created_on>2018-11-19 01:08:17</sys_created_on>
        <sys_id>1ec822aa4f35e300c8b501b18110c7ce</sys_id>
        <sys_mod_count>496</sys_mod_count>
        <sys_name>YayFood</sys_name>
        <sys_package display_value="Yay Food" source="x_snc_yay_food">6fddacd64ff5a300c8b501b18110c7ff</sys_package>
        <sys_policy/>
        <sys_scope display_value="Yay Food">6fddacd64ff5a300c8b501b18110c7ff</sys_scope>
        <sys_update_name>sp_widget_1ec822aa4f35e300c8b501b18110c7ce</sys_update_name>
        <sys_updated_by>admin-eduque</sys_updated_by>
        <sys_updated_on>2019-02-16 00:25:38</sys_updated_on>
        <template><![CDATA[<div ng-if="data.no_group == false">
  <div class="jumbotron jumbotron-fluid" style="background-image: url('yayfoodbanner.jpg'); background-size: auto 100%; color: #FFFFFF">
    <div class="container">
      <p style="text-align: center">
        <a href="?index.html" style="color:#FFFFFF; text-decoration: underline;">Yay Food!</a> by {{data.group_name}}
      </p>
    </div>
  </div>

  <div class="MobileFriend">
    <ul class="list-group">
      <div class="list-group-item" style="background-color: #53586D; color: #FFF;">
        Choose a restaurant
        <span class="sorter" ng-if="data.access==true">
          Sort: 
          <select class="custom-select" ng-model="data.selectedSort" ng-change="c.newSort()">
            <option value="1">Avg. Rating (⬇)</option>
            <option value="2">Avg. Rating (⬆)</option>
            <option value="3">Single Rating (⬇)</option>
            <option value="4">Single Rating (⬆)</option>
            <option value="5">Alpha (a➡z)</option>
            <option value="6">Alpha (z➡a)</option>
            <option value="7">Latest Created</option>
            <option value="8">Oldest Created</option>
          </select>
        </span>
        <span class="sorter" ng-if="data.access!=true">
          Sort: {{data.sortOrder}}
        </span>
      </div>

      <ng-container ng-repeat="restaurant in data.restaurants | orderBy:data.sortOrder">
        <div id="accordion" role="tablist">
          <div class="card-header" role="tab" id="heading{{restaurant.sys_id}}">
            <a data-toggle="collapse" href="#collapse{{restaurant.sys_id}}" aria-expanded="true" aria-controls="collapse{{restaurant.sys_id}}" class="list-group-item list-group-item-action">{{restaurant.name}}
              <span class="badge badge-primary badge-pill" style="background-color: #72778A" ng-if="restaurant.avg_rating != 'NaN' && (data.selectedSort == '1' || data.selectedSort =='2')">
                {{restaurant.avg_rating}}
                <span ng-if="restaurant.food.length != 0">
                  (of {{restaurant.food.length}})
                </span>
              </span>
              <span class="badge badge-primary badge-pill" style="background-color: #72778A" ng-if="restaurant.highest_rate != 'NaN' && (data.selectedSort == '3' || data.selectedSort =='4')">
                {{restaurant.highest_rate}}
                <span ng-if="restaurant.food.length != 0">
                  (avg. {{restaurant.avg_rating}})
                </span>
              </span>
              <span class="badge badge-primary badge-pill" style="background-color: #72778A" ng-if="data.selectedSort == '7' || data.selectedSort =='8'">
                {{restaurant.created}}
              </span>
            </a>
          </div>
          <div id="collapse{{restaurant.sys_id}}" class="collapse" role="tabpanel" aria-labelledby="heading{{restaurant.sys_id}}">
            <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-if="restaurant.note">
              Note: {{restaurant.note}}
            </div>
            <div ng-repeat="entree in restaurant.food">
              <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-click="c.openModal2(entree)">
                <b>{{entree.rating}}</b> - {{entree.name}} <span class="badge badge-primary badge-pill" style="color: #72778A">{{entree.members}}</span> <span class="badge badge-pill badge-warning" style="color: #212529; background-color: #ffc107;" ng-if="entree.note">Note</span>
              </div>
            </div>
            <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-click="c.openModal(restaurant.name, restaurant.sys_id)" ng-if="data.access==true">
              We tried something new!
            </div>
            <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-click="c.openModal3(restaurant.name, restaurant.sys_id, restaurant.note)" ng-if="data.access==true">
              Add/Edit a note about the restaurant
            </div>
          </div>
        </div>
      </ng-container>

      <div id="accordion" role="tablist">
        <div class="card-header" role="tab" id="headingOne">
          <a data-toggle="collapse" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="list-group-item list-group-item-action" ng-if="data.access==true">We're at a new restaurant!</a>
        </div>
        <div id="collapseOne" class="collapse" role="tabpanel" aria-labelledby="headingOne">
          <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF">
            <div class="input-group">
              <input type="text" ng-model="data.restaurant_name_input" class="form-control" placeholder="Restaurant name" aria-label="" aria-describedby="basic-addon1">
              <div class="input-group-append">
                <button data-toggle="collapse" href="#collapseOne" class="nput-group-text" type="button" ng-click="create_restauarnt(data.restaurant_name_input);">Create</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </ul>

    <ul class="list-group" ng-if="data.access==true">
      <div class="list-group-item" style="background-color: #53586D; color: #FFF;">
        Manage group
      </div>
      <div class="card-header" role="tab" id="addmember">
        <a data-toggle="collapse" href="#collapseaddmember" aria-expanded="true" aria-controls="collapseaddmember" class="list-group-item list-group-item-action">Add a group member</a>
      </div>
      <div id="collapseaddmember" class="collapse" role="tabpanel" aria-labelledby="headingaddmember">
        <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF">
          <form class="form-horizontal">
            <div class="form-group">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">Member Name</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <input class="form-control" ng-model="c.data.add_member_name"/>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.add_member_name">
              <div class="col-xs-12 col-md-3 control-label">

              </div>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <button class="btn btn-primary" ng-click="c.addMember()">Add</button>
              </div>
            </div>
          </form>
        </div>
      </div>
      <div class="card-header" role="tab" id="editmember">
        <a data-toggle="collapse" href="#collapseeditmember" aria-expanded="true" aria-controls="collapseeditmember" class="list-group-item list-group-item-action">Edit member name or delete a group member</a>
      </div>
      <div id="collapseeditmember" class="collapse" role="tabpanel" aria-labelledby="headingeditmember">
        <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF">
          <form class="form-horizontal">
            <div class="form-group">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">Select Member</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <select class="form-control" ng-model="c.data.member_to_edit">
                  <option ng-repeat="member in data.members" value="{{member.sys_id}}">{{member.name}}</option>
                </select>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.member_to_edit">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">New Name</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <input class="form-control" ng-model="c.data.new_name"/>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.member_to_edit">
              <div class="col-xs-12 col-md-3 control-label">

              </div>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <button class="btn btn-default" ng-click="c.editMember()" ng-if="c.data.new_name">Save New Name</button>
                <button class="btn btn-destructive" ng-click="c.deleteMember()">Delete Member Entirely</button>
              </div>
            </div>
          </form>
        </div>
      </div>
      <div class="card-header" role="tab" id="deleteentree">
        <a data-toggle="collapse" href="#collapseentreetodelete" aria-expanded="true" aria-controls="collapseentreetodelete" class="list-group-item list-group-item-action">Delete an entree</a>
      </div>
      <div id="collapseentreetodelete" class="collapse" role="tabpanel" aria-labelledby="headingentreetodelete">
        <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF">
          <form class="form-horizontal">
            <div class="form-group">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">Select Restaurant</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <select class="form-control" ng-model="c.data.delete_entree_from_restaurant">
                  <option ng-repeat="restaurant in data.restaurants" value="{{$index}}">{{restaurant.name}}</option>
                </select>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.delete_entree_from_restaurant">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">Select Entree to Delete</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <select class="form-control" ng-model="c.data.delete_entree">
                  <option ng-repeat="entree in data.restaurants[c.data.delete_entree_from_restaurant].food" value="{{entree.sys_id}}">{{entree.name}} ({{entree.created}})</option>
                </select>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.delete_entree_from_restaurant && c.data.delete_entree">
              <div class="col-xs-12 col-md-3 control-label">

              </div>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <button class="btn btn-destructive" ng-click="c.deleteEntree(c.data.delete_entree)">Delete</button>
              </div>
            </div>
          </form>
        </div>
      </div>
      <div class="card-header" role="tab" id="deleterestaurant">
        <a data-toggle="collapse" href="#collapserestauranttodelete" aria-expanded="true" aria-controls="collapserestauranttodelete" class="list-group-item list-group-item-action">Delete a Restaurant</a>
      </div>
      <div id="collapserestauranttodelete" class="collapse" role="tabpanel" aria-labelledby="headingrestauranttodelete">
        <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF">
          <form class="form-horizontal">
            <div class="form-group">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">Select Restaurant</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <select class="form-control" ng-model="c.data.delete_restaurant">
                  <option ng-repeat="restaurant in data.restaurants" value="{{restaurant.sys_id}}">{{restaurant.name}} ({{restaurant.created}})</option>
                </select>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.delete_restaurant">
              <div class="col-xs-12 col-md-3 control-label">

              </div>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <button class="btn btn-destructive" ng-click="c.deleteRestaurant(c.data.delete_restaurant)">Delete</button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </ul>
  </div>  
</div>

<div ng-if="data.no_group == true" class="MobileFriend">
  <nav class="navbar fixed-top navbar-dark bg-primary" style="background-color: #53586D">
    <div class="navbar-brand">
      No group selected. <a href="?id=choose_group">Go back</a> and select a group.
    </div>
  </nav>
</div>

<div ng-if="data.show_debug" class="MobileFriend">
  <input class="checkbox" ng-model="c.data.debug" type="checkbox" id="debugcheckbox" style="display:inline;">
  <label for="debugcheckbox" class="checkbox-label" name="debugcheckbox" style="color:#FFFFFF">Debug</label>
</div>
<div ng-if="data.debug" class="MobileFriend" style="word-wrap: break-word;">
  <font color="#000000">
    {{data}}
  </font>
</div>

<script type="text/ng-template" id="modalTemplate">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Adding food to {{data.modal_restaurant_name}}</h4>
  </div>
    <div class="panel-body">
    	<input class="form-control form-control-sm" type="text" placeholder="Entree Name *" ng-model="c.data.entree_name" required>
      <input class="form-control form-control-sm" type="text" placeholder="Rating (Numeric) *" ng-model="c.data.rating" required>
      <input class="form-control form-control-sm" type="text" placeholder="Note" ng-model="c.data.note">
      <div class="form-group">
				<br>Rated by: 
        <span class="input-group-checkbox" ng-repeat="member in data.members">
					<input id="checkbox{{$index}}" class="checkbox" type="checkbox" name="checkbox{{$index}}" style="display:inline" ng-model="c.data.checkbox[$index]">
					<label for="checkbox{{$index}}" class="checkbox-label">{{member.name}}</label>
  </span>
  </div>
  </div>
		<div class="panel-footer text-right">
   		<button class="btn btn-primary" ng-click="c.addEntree(data.restaurant_sys_id)">${Add}</button>
			<button class="btn btn-secondary" ng-click="c.closeModal()">${Cancel}</button>
  </div>
  </div>
</script>

<script type="text/ng-template" id="modalTemplate2">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Details for {{data.modal_entree_name}}?</h4>
  </div>
  	<div class="panel-body">
  		Name: <ng-container ng-if="c.edit==false">{{data.modal_entree_name}}</ng-container><ng-container ng-if="c.edit==true"><input class="form-control form-control-sm" type="text" ng-model="data.modal_entree_name"></ng-container><BR>
      Rating: <ng-container ng-if="c.edit==false">{{data.modal_entree_rating}}</ng-container><ng-container ng-if="c.edit==true"><input class="form-control form-control-sm" type="text" ng-model="data.modal_entree_rating"></ng-container><BR>
      <ng-container ng-if="c.edit==false">Rated by: {{data.modal_entree_members}}<BR></ng-container><ng-container ng-if="c.edit==true"><!--<input class="form-control form-control-sm" type="text" ng-model="data.modal_entree_members">--></ng-container>
      <span ng-if="data.modal_entree_note">Note: <ng-container ng-if="c.edit==false">{{data.modal_entree_note}}</ng-container></span><ng-container ng-if="c.edit==true">Note: <input class="form-control form-control-sm" type="text" ng-model="data.modal_entree_note"></ng-container>
  </div>
		<div class="panel-footer text-right">
    	<button class="btn btn-primary" ng-if="data.access==true && c.edit==false" ng-click="c.editFood();">${Edit}</button>
      <button class="btn btn-primary" ng-if="data.access==true && c.edit==true" ng-click="c.saveEdits();">${Save Edits}</button>
			<button class="btn btn-secondary" ng-click="c.closeModal()">${Close}</button>
  </div>
  </div>
</script>

<script type="text/ng-template" id="modalTemplate3">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Adding note for {{data.modal_restaurant_name}}</h4>
  </div>
  	<div class="panel-body">
  		<input class="form-control form-control-sm" type="text" placeholder="Note" ng-model="data.restaurant_note">
  </div>
		<div class="panel-footer text-right">
    	<button class="btn btn-primary" ng-click="c.addNote(data.restaurant_sys_id, data.restaurant_note)">${Add/Edit}</button>
			<button class="btn btn-secondary" ng-click="c.closeModal()">${Close}</button>
  </div>
  </div>
</script>]]></template>
    </sp_widget>
</record_update>
