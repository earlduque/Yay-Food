<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $uibModal) {
  /* widget controller */
  var c = this;
	
	$scope.create_restauarnt = function(restaurantName){
		if (restaurantName == null || restaurantName == '') {alert('Please enter a name.');return;}
		c.data.restaurant_name = restaurantName;
		c.server.update();
	}
	
	c.openModal = function(name, sys_id) {
		c.data.modal_restaurant_name = name;
		c.data.restaurant_sys_id = sys_id;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate',
			scope: $scope
		});
	}
	
	c.openModal2 = function(entree) {
		c.data.modal_entree_name = entree.name;
		c.data.modal_entree_rating = entree.rating;
		c.data.modal_entree_members = entree.members;
		c.data.modal_entree_note = entree.note;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate2',
			scope: $scope
		});
	}
	
	c.openModal3 = function(name, sys_id, note){
		c.data.modal_restaurant_name = name;
		c.data.restaurant_sys_id = sys_id;
		c.data.restaurant_note = note;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate3',
			scope: $scope
		});
	}
	
	c.closeModal = function() {
		c.modalInstance.close();
	}
	
	c.addEntree = function(sys_id) {
		if (!c.data.entree_name || !c.data.rating){
			alert('Please complete all fields');
			return;
		}
		var valid_rating = /^\-?(?=\d)\d*\.?(?=\d)\d*$/;
		if (valid_rating.test(c.data.rating) == false){
			alert('Invalid rating. Please use a decimal number');
			return;
		}
		c.data.new_entree_restaurant = sys_id;
		c.server.update();
		c.modalInstance.close();
	}
	
	c.addNote = function(sys_id, note) {
		c.data.add_note_to_restaurant = sys_id;
		c.data.add_note = true;
		c.data.add_note_text = note;
		c.server.update();
		c.modalInstance.close();
	}
	
	c.deleteEntree = function(sys_id){
		var confirm_delete = confirm('Are you sure you want to delete this entree? The action is irreversible.');
		//alert(confirm_delete);
		if (confirm_delete) {
			c.data.confirmed_delete = true;
			c.server.update();
		}
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.list-group-item{
  background-color: #F3F3F3;
}

.MobileFriend{
  margin-left: 10px;
  margin-right: 10px;
}

.btn{
  display: inline-block;
  margin-bottom: 0;
  font-weight: normal;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap;
  padding: 6px 9px;
  font-size: 13px;
  line-height: 1.42857;
  border-radius: 3px;
  user-select: none;
}

.btn-destructive{
  color: #fff;
  background-color: #f95050;
  border-color: #f71f1f;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>yayfood</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>YayFood</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	data.group_id = $sp.getParameter('group');
	data.no_group = false;
	data.debug = false;
	data.checkbox = [];
	data.members_id_array = [];
	data.add_note = false;

	//group in parameters?
	if (data.group_id) {
		var group = new GlideRecord('x_snc_yay_food_groups');
		group.get(data.group_id);
		data.group_name = group.name.toString();}
	else {
		data.no_group = true;
	}

	//who are the members of this group?
	data.members = [];
	var members = new GlideRecord('x_snc_yay_food_members');
	members.addQuery('group', data.group_id);
	members.query();
	while(members.next()){
		var member = {};
		member.name = members.getValue('name').toString();
		//member.sys_id = members.getUniqueValue().toString();
		data.members_id_array.push(members.getUniqueValue());
		data.members.push(member);
	}

	//add a new entree to the restaurant
	if (input != null && input.entree_name && input.rating && input.new_entree_restaurant){
		//data.testadd = true;
		var new_entree = new GlideRecord('x_snc_yay_food_food');
		new_entree.initialize();
		new_entree.setValue('food', input.entree_name);
		new_entree.setValue('rating', input.rating);
		if (input.note) new_entree.setValue('note', input.note);
		new_entree.setValue('restaurant', input.new_entree_restaurant);
		var member_array = [];
		for (var i = 0; i < input.checkbox.length; i++){
			if (input.checkbox[i]) member_array.push(data.members_id_array[i]);
		}
		new_entree.setValue('members', member_array.join(','));
		new_entree.insert();
		data.entree_name = '';
		data.rating = '';
		data.new_entree_restaurant = '';
		data.checkbox = [];
		data.note = '';

		//data.array_to_push = member_array.join(',');
	}
	
	//update the note of this restaurant
	if (input != null && input.add_note == true){
		var update_note = new GlideRecord('x_snc_yay_food_restaurants');
		update_note.get(input.add_note_to_restaurant);
		data.notegr = update_note.getRowCount();
		update_note.setValue('note', input.add_note_text + '');
		update_note.update();
		data.add_note = false;
		data.add_note_to_restaurant = '';
	}
	
	//delete an entrree
	if (input != null && input.confirmed_delete){
		var foodDeleteGR = new GlideRecord('x_snc_yay_food_food');
		foodDeleteGR.get(input.delete_entree);
		foodDeleteGR.deleteRecord();
	}

	//get the restaurants and entrees for this group
	data.restaurants = [];
	var restaurants = new GlideRecord('x_snc_yay_food_restaurants');
	restaurants.orderBy('name');
	restaurants.addQuery('group', data.group_id);
	restaurants.query();
	while(restaurants.next()){
		var restaurant = {};
		restaurant.name = restaurants.getValue('name').toString();
		restaurant.sys_id = restaurants.getUniqueValue().toString();
		restaurant.note = restaurants.getValue('note');

		var foodGR = new GlideRecord('x_snc_yay_food_food');
		foodGR.addQuery('restaurant', restaurant.sys_id);
		foodGR.orderByDesc('rating');
		foodGR.query();
		data.test = foodGR.getRowCount();
		var food = [];
		while(foodGR.next()){
			var entree = {};
			entree.name = foodGR.getValue('food').toString();
			entree.rating = foodGR.getValue('rating').toString();
			entree.members = foodGR.getDisplayValue('members').toString();
			entree.note = foodGR.getValue('note');
			entree.sys_id = foodGR.getUniqueValue();
			entree.created = foodGR.getValue('sys_created_on').toString();
			food.push(entree);
		}
		restaurant.food = food;
		data.restaurants.push(restaurant);
	}

	//add a new restaurant
	if (input != null && input.restaurant_name){
		data.new_name = input.restaurant_name;
		data.restaurant_name_input = '';
		var new_restaurant = new GlideRecord('x_snc_yay_food_restaurants');
		new_restaurant.initialize();
		new_restaurant.setValue('name',data.new_name);
		new_restaurant.setValue('group',data.group_id);
		new_restaurant.insert();
		var newest_restaurant = {};
		newest_restaurant.name = data.new_name;
		newest_restaurant.group = data.group_id;
		newest_restaurant.sys_id = new_restaurant.getUniqueValue().toString();
		data.restaurants.push(newest_restaurant);
		data.restaurant_name = '';
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin-eduque</sys_created_by>
        <sys_created_on>2018-11-19 01:08:17</sys_created_on>
        <sys_id>1ec822aa4f35e300c8b501b18110c7ce</sys_id>
        <sys_mod_count>342</sys_mod_count>
        <sys_name>YayFood</sys_name>
        <sys_package display_value="Yay Food" source="x_snc_yay_food">6fddacd64ff5a300c8b501b18110c7ff</sys_package>
        <sys_policy/>
        <sys_scope display_value="Yay Food">6fddacd64ff5a300c8b501b18110c7ff</sys_scope>
        <sys_update_name>sp_widget_1ec822aa4f35e300c8b501b18110c7ce</sys_update_name>
        <sys_updated_by>admin-eduque</sys_updated_by>
        <sys_updated_on>2018-12-16 17:18:10</sys_updated_on>
        <template><![CDATA[<div ng-if="data.no_group == false">
  <nav class="navbar fixed-top navbar-dark bg-primary" style="background-color: #53586D">
    <div class="navbar-brand">
      Yay Food by {{data.group_name}}
    </div>
  </nav>

  <div class="MobileFriend">
    <ul class="list-group">
      <div class="list-group-item" style="background-color: #53586D; color: #FFF;">
        Choose a restaurant
      </div>

      <ng-container ng-repeat="restaurant in data.restaurants">
        <div id="accordion" role="tablist">
          <div class="card-header" role="tab" id="heading{{restaurant.sys_id}}">
            <a data-toggle="collapse" href="#collapse{{restaurant.sys_id}}" aria-expanded="true" aria-controls="collapse{{restaurant.sys_id}}" class="list-group-item list-group-item-action">{{restaurant.name}}<span class="badge badge-primary badge-pill" style="background-color: #72778A">{{restaurant.food.length}}</span></a>
          </div>
          <div id="collapse{{restaurant.sys_id}}" class="collapse" role="tabpanel" aria-labelledby="heading{{restaurant.sys_id}}">
            <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-if="restaurant.note">
              Note: {{restaurant.note}}
            </div>
            <div ng-repeat="entree in restaurant.food">
              <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-click="c.openModal2(entree)">
                <b>{{entree.rating}}</b> - {{entree.name}} <span class="badge badge-primary badge-pill" style="color: #72778A">{{entree.members}}</span> <span class="badge badge-pill badge-warning" style="color: #212529; background-color: #ffc107;" ng-if="entree.note">Note</span>
              </div>
            </div>
            <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-click="c.openModal(restaurant.name, restaurant.sys_id)">
              We tried something new!
            </div>
            <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF" ng-click="c.openModal3(restaurant.name, restaurant.sys_id, restaurant.note)">
              Add/Edit a note about the restaurant
            </div>
          </div>
        </div>
      </ng-container>

      <div id="accordion" role="tablist">
        <div class="card-header" role="tab" id="headingOne">
          <a data-toggle="collapse" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="list-group-item list-group-item-action">We're at a new restaurant!</a>
        </div>
        <div id="collapseOne" class="collapse" role="tabpanel" aria-labelledby="headingOne">
          <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF">
            <div class="input-group">
              <input type="text" ng-model="data.restaurant_name_input" class="form-control" placeholder="Restaurant name" aria-label="" aria-describedby="basic-addon1">
              <div class="input-group-append">
                <button data-toggle="collapse" href="#collapseOne" class="nput-group-text" type="button" ng-click="create_restauarnt(data.restaurant_name_input);">Create</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </ul>

    <ul class="list-group">
      <div class="list-group-item" style="background-color: #53586D; color: #FFF;">
        Manage group (coming soon)
      </div>
      <div class="list-group-item">
        Add a member
      </div>
      <div class="list-group-item">
        Edit member name or delete a member
      </div>
      <div class="card-header" role="tab" id="deleteentree">
        <a data-toggle="collapse" href="#collapseentreetodelete" aria-expanded="true" aria-controls="collapseentreetodelete" class="list-group-item list-group-item-action">Delete an entree</a>
      </div>
      <div id="collapseentreetodelete" class="collapse" role="tabpanel" aria-labelledby="headingentreetodelete">
        <div class="list-group-item" style="margin-left: 10px; background-color: #FFFFFF">
          <form class="form-horizontal">
            <div class="form-group">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">Select Restaurant</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <select class="form-control" ng-model="c.data.delete_entree_from_restaurant">
                  <option ng-repeat="restaurant in data.restaurants" value="{{$index}}">{{restaurant.name}}</option>
                </select>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.delete_entree_from_restaurant">
              <label class="col-xs-12 col-md-3 control-label">
                <span class="label-text">Select Entree to Delete</span>
              </label>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <select class="form-control" ng-model="c.data.delete_entree">
                  <option ng-repeat="entree in data.restaurants[c.data.delete_entree_from_restaurant].food" value="{{entree.sys_id}}">{{entree.name}} ({{entree.created}})</option>
                </select>
              </div>
            </div>
            <div class="form-group" ng-if="c.data.delete_entree_from_restaurant && c.data.delete_entree">
              <div class="col-xs-12 col-md-3 control-label">
                
              </div>
              <div class="col-xs-12 col-md-9 form-field input_controls">
                <button class="btn btn-destructive" ng-click="c.deleteEntree(c.data.delete_entree)">Delete</button>
              </div>
            </div>
          </form>
        </div>
      </div>
      <div class="list-group-item">
        Delete a restaurant
      </div>
    </ul>
  </div>  
</div>

<div>
  <input class="checkbox" ng-model="c.data.debug" type="checkbox" id="debugcheckbox" style="display:inline;">
  <label for="debugcheckbox" class="checkbox-label" name="debugcheckbox" style="color:#FFFFFF">Debug</label>
</div>
<div ng-if="data.no_group == true">
  <nav class="navbar fixed-top navbar-dark bg-primary" style="background-color: #53586D">
    <div class="navbar-brand">
      No group selected. <a href="?id=choose_group">Go back</a> and select a group.
    </div>
  </nav>
</div>

<div ng-if="data.debug">
  <font color="#000000">
    test: {{data.restaurant_name_input}}<BR>
    object: {{data.restaurants.length}}<BR>
    food: {{data.test}}<BR>
    member: {{data.member_0}}<BR>
    add: {{data.testadd}}<BR>
    array: {{data.checkbox[0]}}{{data.checkbox[1]}} {{data.array_to_push}}<BR>
    membersidarray: {{data.members_id_array}}<BR>
    checkboxlength: {{data.checkbox.length}}<BR>
    notegr: {{data.notegr}} {{data.add_note_text}} {{data.add_note_to_restaurant}}<BR>
    delete_entree_from_restaurant: {{data.delete_entree_from_restaurant}}<BR>
    restaurant object: {{data.restaurants[0].food}}<BR>
    delete choices: {{data.delete_entree_from_restaurant}} - {{data.delete_entree}}
    </font>
    </div>

    <script type="text/ng-template" id="modalTemplate">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Adding food to {{data.modal_restaurant_name}}</h4>
      </div>
    <div class="panel-body">
    	<input class="form-control form-control-sm" type="text" placeholder="Entree Name *" ng-model="c.data.entree_name" required>
      <input class="form-control form-control-sm" type="text" placeholder="Rating (Numeric) *" ng-model="c.data.rating" required>
      <input class="form-control form-control-sm" type="text" placeholder="Note" ng-model="c.data.note">
      <div class="form-group">
				<br>Rated by: 
        <span class="input-group-checkbox" ng-repeat="member in data.members">
					<input id="checkbox{{$index}}" class="checkbox" type="checkbox" name="checkbox{{$index}}" style="display:inline" ng-model="c.data.checkbox[$index]">
					<label for="checkbox{{$index}}" class="checkbox-label">{{member.name}}</label>
      </span>
      </div>
      </div>
		<div class="panel-footer text-right">
   		<button class="btn btn-primary" ng-click="c.addEntree(data.restaurant_sys_id)">${Add}</button>
			<button class="btn btn-secondary" ng-click="c.closeModal()">${Cancel}</button>
      </div>
      </div>
    </script>

    <script type="text/ng-template" id="modalTemplate2">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Details for {{data.modal_entree_name}}?</h4>
      </div>
  	<div class="panel-body">
  		Name: {{data.modal_entree_name}}<BR>
      Rating: {{data.modal_entree_rating}}<BR>
      Rated by: {{data.modal_entree_members}}<BR>
      <span ng-if="data.modal_entree_note">Note: {{data.modal_entree_note}}</span>
      </div>
		<div class="panel-footer text-right">
    	<button class="btn btn-primary">${Edit (Coming Soon)}</button>
			<button class="btn btn-secondary" ng-click="c.closeModal()">${Close}</button>
      </div>
      </div>
    </script>

    <script type="text/ng-template" id="modalTemplate3">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Adding note for {{data.modal_restaurant_name}}</h4>
      </div>
  	<div class="panel-body">
  		<input class="form-control form-control-sm" type="text" placeholder="Note" ng-model="data.restaurant_note">
      </div>
		<div class="panel-footer text-right">
    	<button class="btn btn-primary" ng-click="c.addNote(data.restaurant_sys_id, data.restaurant_note)">${Add/Edit}</button>
			<button class="btn btn-secondary" ng-click="c.closeModal()">${Close}</button>
      </div>
      </div>
    </script>]]></template>
    </sp_widget>
</record_update>
